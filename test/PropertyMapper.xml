<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itfin.platform.dao.property.PropertyMapper">
    <resultMap id="BaseResultMap" type="com.itfin.platform.domain.model.Property">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="total_amount" jdbcType="INTEGER" property="totalAmount"/>
        <result column="total_profit" jdbcType="INTEGER" property="totalProfit"/>
        <result column="can_use_amount" jdbcType="INTEGER" property="canUseAmount"/>
        <result column="freeze" jdbcType="INTEGER" property="freeze"/>
        <result column="pool_total_amount" jdbcType="INTEGER" property="poolTotalAmount"/>
        <result column="pool_amount" jdbcType="INTEGER" property="poolAmount"/>
        <result column="pool_profit" jdbcType="INTEGER" property="poolProfit"/>
        <result column="pool_freeze" jdbcType="INTEGER" property="poolFreeze"/>
        <result column="accumulation_profit" jdbcType="INTEGER" property="accumulationProfit"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag"/>
    </resultMap>
    <!-- 查询我的资产 -->
    <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select * from biz_property where delete_flag=1 and user_id=#{userId}
    </select>


    <!--==============================================default==============================================-->
    <update id="addTotalAmount">
        update biz_property set total_amount=(total_amount +#{amount}),can_use_amount=(can_use_amount -#{amount}),freeze=(freeze+ #{amount}), update_time=#{updateTime}  where delete_flag=1 and user_id=#{userId}
    </update>
    <update id="removeTotalAmount">
        update biz_property set total_amount=(total_amount -#{amount}),can_use_amount=(can_use_amount +#{amount}),freeze=(freeze- #{amount}), update_time=#{updateTime}  where delete_flag=1 and user_id=#{userId}
    </update>
    <update id="addCanUseAmount">
        update biz_property set total_amount=(total_amount +#{amount}),can_use_amount=(can_use_amount +#{amount}), update_time=#{updateTime}  where delete_flag=1 and user_id=#{userId}
    </update>
    <update id="reduceCanUseAmount">
        update biz_property set total_amount=(total_amount -#{amount}),can_use_amount=(can_use_amount -#{amount}), update_time=#{updateTime}  where delete_flag=1 and user_id=#{userId}
    </update>
    <!--==============================================POOL===============================================-->
    <update id="addPoolAmount">
        update biz_property set pool_total_amount=(pool_total_amount +#{amount}),pool_amount=(pool_amount +#{amount}), update_time=#{updateTime}  where delete_flag=1 and user_id=#{userId}
    </update>
    <update id="reducePoolAmount">
        update biz_property set pool_total_amount=(pool_total_amount -#{amount}),pool_amount=(pool_amount -#{amount}), update_time=#{updateTime}  where delete_flag=1 and user_id=#{userId}
    </update>
    <!--增加钱包总金额，剪掉余额，增加冻结金额-->
    <update id="addPoolTotalAmount">
        update biz_property set pool_total_amount=(pool_total_amount +#{amount}),pool_amount=(pool_amount -#{amount}),pool_freeze=(pool_freeze+ #{amount}), update_time=#{updateTime}  where delete_flag=1 and user_id=#{userId}
    </update>
    <!--剪掉钱包总金额，增加余额，剪掉冻结金额-->
    <update id="reducePoolTotalAmount">
        update biz_property set pool_total_amount=(pool_total_amount -#{amount}),pool_amount=(pool_amount +#{amount}),pool_freeze=(pool_freeze- #{amount}), update_time=#{updateTime}  where delete_flag=1 and user_id=#{userId}
    </update>
    <!--加入钱包收益,同时增加余额，总金额-->
    <update id="addPoolProfit">
        update biz_property set pool_profit=(pool_profit +#{amount}),pool_total_amount=(pool_total_amount +#{amount}),pool_amount=(pool_amount +#{amount}), update_time=#{updateTime}  where delete_flag=1 and user_id=#{userId}
    </update>



    <!--=========================================== C R U D=======================================-->
    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
     select * from biz_property
		where id = #{id,jdbcType=INTEGER}
     and delete_flag = 1
 </select>
    <update id="deleteById" parameterType="java.lang.Integer">
     update biz_property
		set delete_flag = 0
		where id = #{id,jdbcType=INTEGER} 
 </update>
    <update id="updateById" parameterType="com.itfin.platform.domain.model.Property">
     update biz_property 
   <set>
        <if test="userId != null">user_id = #{userId,jdbcType=INTEGER},</if>
        <if test="totalAmount != null">total_amount = #{totalAmount,jdbcType=INTEGER},</if>
        <if test="totalProfit != null">total_profit = #{totalProfit,jdbcType=INTEGER},</if>
        <if test="canUseAmount != null">can_use_amount = #{canUseAmount,jdbcType=INTEGER},</if>
        <if test="freeze != null">freeze = #{freeze,jdbcType=INTEGER},</if>
        <if test="poolTotalAmount != null">pool_total_amount = #{poolTotalAmount,jdbcType=INTEGER},</if>
        <if test="poolAmount != null">pool_amount = #{poolAmount,jdbcType=INTEGER},</if>
        <if test="poolProfit != null">pool_profit = #{poolProfit,jdbcType=INTEGER},</if>
        <if test="poolFreeze != null">pool_freeze = #{poolFreeze,jdbcType=INTEGER},</if>
        <if test="accumulationProfit != null">accumulation_profit = #{accumulationProfit,jdbcType=INTEGER},</if>
        <if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if>
        <if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if>
        <if test="status != null">status = #{status,jdbcType=INTEGER},</if>
        <if test="deleteFlag != null">delete_flag = #{deleteFlag,jdbcType=INTEGER},</if>
   </set>		where id = #{id,jdbcType=INTEGER} and delete_flag = 1
 </update>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="com.itfin.platform.domain.model.Property">
     insert into biz_property
 <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="userId != null">user_id,</if>
        <if test="totalAmount != null">total_amount,</if>
        <if test="totalProfit != null">total_profit,</if>
        <if test="canUseAmount != null">can_use_amount,</if>
        <if test="freeze != null">freeze,</if>
        <if test="poolTotalAmount != null">pool_total_amount,</if>
        <if test="poolAmount != null">pool_amount,</if>
        <if test="poolProfit != null">pool_profit,</if>
        <if test="poolFreeze != null">pool_freeze,</if>
        <if test="accumulationProfit != null">accumulation_profit,</if>
        <if test="createTime != null">create_time,</if>
        <if test="updateTime != null">update_time,</if>
        <if test="status != null">status,</if>
        <if test="deleteFlag != null">delete_flag,</if>
   </trim>

<trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="userId != null">#{userId,jdbcType=INTEGER},</if>
        <if test="totalAmount != null">#{totalAmount,jdbcType=INTEGER},</if>
        <if test="totalProfit != null">#{totalProfit,jdbcType=INTEGER},</if>
        <if test="canUseAmount != null">#{canUseAmount,jdbcType=INTEGER},</if>
        <if test="freeze != null">#{freeze,jdbcType=INTEGER},</if>
        <if test="poolTotalAmount != null">#{poolTotalAmount,jdbcType=INTEGER},</if>
        <if test="poolAmount != null">#{poolAmount,jdbcType=INTEGER},</if>
        <if test="poolProfit != null">#{poolProfit,jdbcType=INTEGER},</if>
        <if test="poolFreeze != null">#{poolFreeze,jdbcType=INTEGER},</if>
        <if test="accumulationProfit != null">#{accumulationProfit,jdbcType=INTEGER},</if>
        <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
        <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        <if test="status != null">#{status,jdbcType=INTEGER},</if>
        <if test="deleteFlag != null">#{deleteFlag,jdbcType=INTEGER},</if>
   </trim>
</insert>
</mapper>